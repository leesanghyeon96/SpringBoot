# Local 개발시 설정 파일 (application.properties)
# Remote 서비스를 작동 할때 설정 파일 (application-prod.properties)

# java -Dspring.profile.active=prod - jar sbb-0.0.1-SNAPSHOT.jar
#		application-prod.properties 파일이 설정 파일이 된다.

# 각종 설정을 세팅하는 파일
# ****주의**** : 변수에 공백등 완료 후 다시 확인하기
#JDBC 세팅, MyBatis Mapper, ...
# properties의 주석

# 기본 포트 : 8080 : netstat -na |more
server.port=9001
# 80번 포트로 배포하면 실행시 sudo 명령어를 넣어야한다.
#start.sh 에서도 nohup 앞에 sudo를 넣어야한다.
#그러나 보안상 이슈를 위해 시작시 sudo명령어를 쓰지말아야한다.

# DevTools 활성화
spring.devtools.livereload.enabled=true
spring.freemarker.cache=false

# H2 DataBase 연결설정

# 원격에서 H2 DataBase를 접속 할 수 있도록 허용
spring.h2.console.settings.web-allow-others=true

# 콘솔로 접근
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
# DB설정
spring.datasource.url=jdbc:h2:~/local
spring.datasource.driverClassName=org.h2.Driver
# 테스트계정이므로 암호는 없다.
spring.datasource.username=sa
spring.datasource.password=1234


# JPA ( JPA는 H2 DB와 연결설정, 변경사항만 업데이트됨 ) -> 나중에 H2Dialect를 Oracle로 변경
# hibernate : JPA의 구현체
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# JPA 메소드를 사용할 경우 JPA가 SQL쿼리를 생성해서 DB에 저장함. (Oracle,MySQL,MSSQL,...)
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.show_sql=true











